/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package lastmanstanding;

import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JSpinner;

/**
 *
 * @author Steven
 */
 public class LastManGUI extends javax.swing.JFrame {  
     
  private final ArrayList<JLabel> fixlabels;
  private final ArrayList<JSpinner> homeSpinners;
  private final ArrayList<JSpinner> awaySpinners;
  private final String league = "epl";
  private int weekNumber = 1;
  private final int totalLeagueWeeks = 38;
  private final LastManStanding lms;
        
  private void addInfoToSwing() {
      lms.getLeagueTeams(league);
      lms.getFixtures(league+"Fixtures"+weekNumber);
        for (String team : lms.getTeams()) {
                predictionCombo.addItem(team);
            }
        fixlabels.add(fix1lbl);
        fixlabels.add(fix2lbl);
        fixlabels.add(fix3lbl);
        fixlabels.add(fix4lbl);
        fixlabels.add(fix5lbl); 
        fixlabels.add(fix6lbl);
        fixlabels.add(fix7lbl);
        fixlabels.add(fix8lbl);
        fixlabels.add(fix9lbl);
        fixlabels.add(fix10lbl);
        
        homeSpinners.add(home1); awaySpinners.add(away1);
        homeSpinners.add(home2); awaySpinners.add(away2);
        homeSpinners.add(home3); awaySpinners.add(away3);
        homeSpinners.add(home4); awaySpinners.add(away4);
        homeSpinners.add(home5); awaySpinners.add(away5);
        homeSpinners.add(home6); awaySpinners.add(away6);
        homeSpinners.add(home7); awaySpinners.add(away7);
        homeSpinners.add(home8); awaySpinners.add(away8);
        homeSpinners.add(home9); awaySpinners.add(away9);
        homeSpinners.add(home10); awaySpinners.add(away10);
  }
  
  public void processResult() {
      ArrayList<Player> outList = new ArrayList<>();
      for (Player p : lms.getPlayerList()) {
        System.out.println(p.getName() +" = "+p.getPrediction());
        for (Fixture f : lms.getFixtures()) {
            if (f.involvedIn(p.getPrediction())) {
                if (f.isWinner(p.getPrediction())) {
                System.out.println(p.getName()+" through to next round");
                }
                else {
               System.out.println(p.getName()+" is out");
               outList.add(p);
               }
            }
        }
      }
      for (Player x : outList) {
          lms.removePlayer(x);
      }
     lms.getFixtures().clear();
      weekNumber++;
      if (weekNumber <= totalLeagueWeeks) {
      lms.getFixtures(league+"Fixtures"+weekNumber);
      }
      
  }
    /**
     * Creates new form MenuPage
     */
    public LastManGUI() {
        this.awaySpinners = new ArrayList<>();
        this.homeSpinners = new ArrayList<>();
        this.fixlabels = new ArrayList<>();
        this.lms = new LastManStanding(league,totalLeagueWeeks);
        initComponents();
        addInfoToSwing();
      
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        remainingPlayerPane = new javax.swing.JLayeredPane();
        remainingPlayersText = new javax.swing.JLabel();
        enterNamePane = new javax.swing.JLayeredPane();
        playerName = new javax.swing.JTextField();
        okPlayerName = new javax.swing.JButton();
        confirmText = new javax.swing.JLabel();
        enterResultsPane = new javax.swing.JLayeredPane();
        fix1lbl = new javax.swing.JLabel();
        fix2lbl = new javax.swing.JLabel();
        fix3lbl = new javax.swing.JLabel();
        fix4lbl = new javax.swing.JLabel();
        fix5lbl = new javax.swing.JLabel();
        fix6lbl = new javax.swing.JLabel();
        fix7lbl = new javax.swing.JLabel();
        fix8lbl = new javax.swing.JLabel();
        fix9lbl = new javax.swing.JLabel();
        fix10lbl = new javax.swing.JLabel();
        okResults = new javax.swing.JButton();
        home1 = new javax.swing.JSpinner();
        away1 = new javax.swing.JSpinner();
        home2 = new javax.swing.JSpinner();
        away2 = new javax.swing.JSpinner();
        home3 = new javax.swing.JSpinner();
        away3 = new javax.swing.JSpinner();
        home4 = new javax.swing.JSpinner();
        away4 = new javax.swing.JSpinner();
        home6 = new javax.swing.JSpinner();
        away5 = new javax.swing.JSpinner();
        home7 = new javax.swing.JSpinner();
        away7 = new javax.swing.JSpinner();
        home8 = new javax.swing.JSpinner();
        away8 = new javax.swing.JSpinner();
        home9 = new javax.swing.JSpinner();
        away9 = new javax.swing.JSpinner();
        home5 = new javax.swing.JSpinner();
        away6 = new javax.swing.JSpinner();
        home10 = new javax.swing.JSpinner();
        away10 = new javax.swing.JSpinner();
        resultsConfirm = new javax.swing.JLabel();
        playerPredictionPane = new javax.swing.JLayeredPane();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        predOK = new javax.swing.JButton();
        selectPlayerCombo = new javax.swing.JComboBox<>();
        predictionCombo = new javax.swing.JComboBox<>();
        predFeedback = new javax.swing.JLabel();
        menuOptionsOK = new javax.swing.JButton();
        menuComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LAST MAN STANDING");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.red, java.awt.Color.red, java.awt.Color.red, java.awt.Color.red));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LAST MAN STANDING");
        setResizable(false);

        jPanel2.setLayout(null);

        remainingPlayerPane.setBackground(new java.awt.Color(255, 255, 255));
        remainingPlayerPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Remaining Players", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), java.awt.SystemColor.textHighlightText)); // NOI18N
        remainingPlayerPane.setFocusable(false);

        remainingPlayersText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        remainingPlayersText.setForeground(new java.awt.Color(255, 255, 255));
        remainingPlayersText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        remainingPlayersText.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        remainingPlayerPane.setLayer(remainingPlayersText, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout remainingPlayerPaneLayout = new javax.swing.GroupLayout(remainingPlayerPane);
        remainingPlayerPane.setLayout(remainingPlayerPaneLayout);
        remainingPlayerPaneLayout.setHorizontalGroup(
            remainingPlayerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remainingPlayerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(remainingPlayersText, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addContainerGap())
        );
        remainingPlayerPaneLayout.setVerticalGroup(
            remainingPlayerPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remainingPlayerPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(remainingPlayersText, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(remainingPlayerPane);
        remainingPlayerPane.setBounds(30, 380, 400, 220);

        enterNamePane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter New Player Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 0, 0))); // NOI18N
        enterNamePane.setEnabled(false);
        enterNamePane.setName(""); // NOI18N

        okPlayerName.setText("OK");
        okPlayerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okPlayerNameActionPerformed(evt);
            }
        });

        confirmText.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        confirmText.setForeground(new java.awt.Color(0, 204, 51));
        confirmText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        confirmText.setText(" ");

        enterNamePane.setLayer(playerName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterNamePane.setLayer(okPlayerName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterNamePane.setLayer(confirmText, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout enterNamePaneLayout = new javax.swing.GroupLayout(enterNamePane);
        enterNamePane.setLayout(enterNamePaneLayout);
        enterNamePaneLayout.setHorizontalGroup(
            enterNamePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enterNamePaneLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(playerName, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okPlayerName)
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enterNamePaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(confirmText, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        enterNamePaneLayout.setVerticalGroup(
            enterNamePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enterNamePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(enterNamePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okPlayerName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(enterNamePane);
        enterNamePane.setBounds(20, 140, 390, 80);

        enterResultsPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Results", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 0, 0))); // NOI18N
        enterResultsPane.setEnabled(false);

        fix1lbl.setText("Fixture 1");
        fix1lbl.setOpaque(true);

        fix2lbl.setText("Fixture 2");
        fix2lbl.setOpaque(true);

        fix3lbl.setText("Fixture 3");
        fix3lbl.setOpaque(true);

        fix4lbl.setText("Fixture 4");
        fix4lbl.setOpaque(true);

        fix5lbl.setText("Fixture 5");
        fix5lbl.setOpaque(true);

        fix6lbl.setText("Fixture 6");
        fix6lbl.setOpaque(true);

        fix7lbl.setText("Fixture 7");
        fix7lbl.setOpaque(true);

        fix8lbl.setText("Fixture 8");
        fix8lbl.setOpaque(true);

        fix9lbl.setText("Fixture 9");
        fix9lbl.setOpaque(true);

        fix10lbl.setText("Fixture 10");
        fix10lbl.setOpaque(true);

        okResults.setText("OK");
        okResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okResultsActionPerformed(evt);
            }
        });

        home1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        away1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        home2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        away2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        home3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        away3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        home4.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        away4.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        home6.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        away5.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        home7.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        away7.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        home8.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        away8.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        home9.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        away9.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        home5.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        away6.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        home10.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        away10.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        resultsConfirm.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        resultsConfirm.setForeground(new java.awt.Color(255, 255, 255));
        resultsConfirm.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        enterResultsPane.setLayer(fix1lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(fix2lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(fix3lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(fix4lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(fix5lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(fix6lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(fix7lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(fix8lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(fix9lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(fix10lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(okResults, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(home1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(away1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(home2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(away2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(home3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(away3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(home4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(away4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(home6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(away5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(home7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(away7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(home8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(away8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(home9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(away9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(home5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(away6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(home10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(away10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        enterResultsPane.setLayer(resultsConfirm, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout enterResultsPaneLayout = new javax.swing.GroupLayout(enterResultsPane);
        enterResultsPane.setLayout(enterResultsPaneLayout);
        enterResultsPaneLayout.setHorizontalGroup(
            enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enterResultsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fix4lbl, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(fix5lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fix8lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fix9lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fix7lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fix1lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fix2lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fix3lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fix6lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fix10lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(enterResultsPaneLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(home1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(away1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enterResultsPaneLayout.createSequentialGroup()
                        .addComponent(home2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(away2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(enterResultsPaneLayout.createSequentialGroup()
                            .addComponent(home4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(away4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(enterResultsPaneLayout.createSequentialGroup()
                            .addComponent(home3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(away3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(enterResultsPaneLayout.createSequentialGroup()
                            .addComponent(home5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(away5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(enterResultsPaneLayout.createSequentialGroup()
                            .addComponent(home6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(away6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(enterResultsPaneLayout.createSequentialGroup()
                            .addComponent(home7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(away7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(enterResultsPaneLayout.createSequentialGroup()
                            .addComponent(home8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(away8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(enterResultsPaneLayout.createSequentialGroup()
                            .addComponent(home9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(away9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(enterResultsPaneLayout.createSequentialGroup()
                            .addComponent(home10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(away10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(77, 77, 77))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enterResultsPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resultsConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okResults)
                .addContainerGap())
        );
        enterResultsPaneLayout.setVerticalGroup(
            enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enterResultsPaneLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fix1lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(away1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(home1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fix2lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(away2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(home2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fix3lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(away3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fix4lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(away4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fix5lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(away5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fix6lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(away6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fix7lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(away7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fix8lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(away8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fix9lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(away9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fix10lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(away10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(enterResultsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(okResults)
                    .addComponent(resultsConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        jPanel2.add(enterResultsPane);
        enterResultsPane.setBounds(450, 20, 460, 510);

        playerPredictionPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Player Prediction", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 0, 0))); // NOI18N
        playerPredictionPane.setForeground(new java.awt.Color(255, 255, 255));
        playerPredictionPane.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Select Player:");
        jLabel7.setOpaque(true);
        playerPredictionPane.add(jLabel7);
        jLabel7.setBounds(10, 40, 90, 17);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Winning Team Prediction:");
        jLabel8.setOpaque(true);
        playerPredictionPane.add(jLabel8);
        jLabel8.setBounds(10, 70, 160, 17);

        predOK.setText("OK");
        predOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                predOKActionPerformed(evt);
            }
        });
        playerPredictionPane.add(predOK);
        predOK.setBounds(313, 100, 50, 23);

        selectPlayerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPlayerComboActionPerformed(evt);
            }
        });
        playerPredictionPane.add(selectPlayerCombo);
        selectPlayerCombo.setBounds(240, 40, 120, 20);

        predictionCombo.setActionCommand("");
        predictionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                predictionComboActionPerformed(evt);
            }
        });
        playerPredictionPane.add(predictionCombo);
        predictionCombo.setBounds(240, 70, 120, 20);

        predFeedback.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        predFeedback.setForeground(new java.awt.Color(51, 204, 0));
        predFeedback.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        playerPredictionPane.add(predFeedback);
        predFeedback.setBounds(140, 104, 160, 20);

        jPanel2.add(playerPredictionPane);
        playerPredictionPane.setBounds(30, 230, 400, 140);

        menuOptionsOK.setText("OK");
        menuOptionsOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOptionsOKActionPerformed(evt);
            }
        });
        jPanel2.add(menuOptionsOK);
        menuOptionsOK.setBounds(310, 100, 50, 30);

        menuComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enter New Player", "Enter Player Prediction", "Enter Results", "View Remaining Players" }));
        jPanel2.add(menuComboBox);
        menuComboBox.setBounds(170, 60, 190, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Menu Options :");
        jLabel3.setBorder(new javax.swing.border.MatteBorder(null));
        jLabel3.setOpaque(true);
        jPanel2.add(jLabel3);
        jLabel3.setBounds(30, 60, 130, 30);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lastmanstanding/the-ball.jpg"))); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(10, -20, 1070, 710);

        jLabel11.setText("jLabel11");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(770, 140, 40, 14);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 960, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okPlayerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okPlayerNameActionPerformed

        if (!playerName.getText().isEmpty() && (!lms.isPlayerAlready(playerName.getText()))) {
           lms.addPlayer(playerName.getText(),"No Prediction Yet");
           confirmText.setText(playerName.getText()+" added.");
           playerName.setText("");
        }
        else if (lms.isPlayerAlready(playerName.getText())) {
            confirmText.setText(playerName.getText()+" has already been added.");
            playerName.setText("");
        }
        else {
            confirmText.setText("Empty Name Entered");
        }
           
    }//GEN-LAST:event_okPlayerNameActionPerformed

    private void menuOptionsOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOptionsOKActionPerformed
        remainingPlayerPane.setEnabled(false);
        playerPredictionPane.setEnabled(false);
        enterResultsPane.setEnabled(false);
        
      switch (menuComboBox.getSelectedItem().toString()) {
          case "View Remaining Players":
              remainingPlayerPane.setEnabled(true);
              remainingPlayersText.setText(lms.showPlayers());
              break;
          case "Enter Player Prediction":
              playerPredictionPane.setEnabled(true);
              
              
             int num = selectPlayerCombo.getItemCount();
              if (num < 1) {                      // if list empty add all players to list
                  for(Player player : lms.getPlayerList()) {
                      selectPlayerCombo.addItem(player.getName());
                  }
              }
              else {                              // list already populated
                boolean match;
                  for(Player player : lms.getPlayerList()) {
                      match = false;
                      for (int i = 0; i < num; i++) {
                          if (selectPlayerCombo.getItemAt(i).equals(player.getName())) {
                              match = true;
                          }
                      }
                      if (match == false) { // player not in list
                          selectPlayerCombo.addItem(player.getName());
                      }
                  }
              } break;
          case "Enter Results":
              enterResultsPane.setEnabled(true);
              for (int i = 0; i < fixlabels.size(); i++ ) {
                  fixlabels.get(i).setText(lms.getFixtures().get(i).getFixture());
              }
              break;
          default:
              break;
      }
   
    }//GEN-LAST:event_menuOptionsOKActionPerformed

    private void predOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_predOKActionPerformed
        String name = selectPlayerCombo.getSelectedItem().toString();
        String pred = predictionCombo.getSelectedItem().toString();
        lms.getPlayerByName(name).setPrediction(pred);
        predFeedback.setText(name+"'s prediction updated");
    }//GEN-LAST:event_predOKActionPerformed

    private void okResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okResultsActionPerformed
        resultsConfirm.setText("Results updated");
        for (int i = 0; i < lms.getFixtures().size(); i++) {
            lms.getFixtures().get(i).setResult((int)homeSpinners.get(i).getValue(),(int)awaySpinners.get(i).getValue());
            System.out.println(lms.getFixtures().get(i).getResult());
        }
        processResult();
    }//GEN-LAST:event_okResultsActionPerformed

    private void predictionComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_predictionComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_predictionComboActionPerformed

    private void selectPlayerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPlayerComboActionPerformed
        String name = selectPlayerCombo.getSelectedItem().toString();
        for (int i=0; i <predictionCombo.getItemCount();i++) {
          if (name.equals(predictionCombo.getItemAt(i))) {
              predictionCombo.removeItemAt(i);
              System.out.println("Remove item at "+ i);
          }
        }
    }//GEN-LAST:event_selectPlayerComboActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
   
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LastManGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
      //</editor-fold>
      //</editor-fold>
      //</editor-fold>
      //</editor-fold>
      
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new LastManGUI().setVisible(true);
        });
  
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner away1;
    private javax.swing.JSpinner away10;
    private javax.swing.JSpinner away2;
    private javax.swing.JSpinner away3;
    private javax.swing.JSpinner away4;
    private javax.swing.JSpinner away5;
    private javax.swing.JSpinner away6;
    private javax.swing.JSpinner away7;
    private javax.swing.JSpinner away8;
    private javax.swing.JSpinner away9;
    private javax.swing.JLabel confirmText;
    private javax.swing.JLayeredPane enterNamePane;
    private javax.swing.JLayeredPane enterResultsPane;
    private javax.swing.JLabel fix10lbl;
    private javax.swing.JLabel fix1lbl;
    private javax.swing.JLabel fix2lbl;
    private javax.swing.JLabel fix3lbl;
    private javax.swing.JLabel fix4lbl;
    private javax.swing.JLabel fix5lbl;
    private javax.swing.JLabel fix6lbl;
    private javax.swing.JLabel fix7lbl;
    private javax.swing.JLabel fix8lbl;
    private javax.swing.JLabel fix9lbl;
    private javax.swing.JSpinner home1;
    private javax.swing.JSpinner home10;
    private javax.swing.JSpinner home2;
    private javax.swing.JSpinner home3;
    private javax.swing.JSpinner home4;
    private javax.swing.JSpinner home5;
    private javax.swing.JSpinner home6;
    private javax.swing.JSpinner home7;
    private javax.swing.JSpinner home8;
    private javax.swing.JSpinner home9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> menuComboBox;
    private javax.swing.JButton menuOptionsOK;
    private javax.swing.JButton okPlayerName;
    private javax.swing.JButton okResults;
    private javax.swing.JTextField playerName;
    private javax.swing.JLayeredPane playerPredictionPane;
    private javax.swing.JLabel predFeedback;
    private javax.swing.JButton predOK;
    private javax.swing.JComboBox<String> predictionCombo;
    private javax.swing.JLayeredPane remainingPlayerPane;
    private javax.swing.JLabel remainingPlayersText;
    private javax.swing.JLabel resultsConfirm;
    private javax.swing.JComboBox<String> selectPlayerCombo;
    // End of variables declaration//GEN-END:variables
}
